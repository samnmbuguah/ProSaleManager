Starting database initialization...
02:55:23 PM [express] serving on port 5000
Database migrations completed successfully
Database connection verified

 ERROR(TypeScript)  Type '(paymentDetails: {    amountPaid: number;    change: number;    items: CartItem[];}) => Promise<void>' is not assignable to type '(paymentDetails: { amountPaid: number; change: number; items: CartItem[]; }) => Promise<void>'.
  Types of parameters 'paymentDetails' and 'paymentDetails' are incompatible.
    Type '{ amountPaid: number; change: number; items: CartItem[]; }' is not assignable to type '{ amountPaid: number; change: number; items: CartItem[]; }'. Two different types with this name exist, but they are unrelated.
      Types of property 'items' are incompatible.
        Type 'CartItem[]' is not assignable to type 'CartItem[]'. Two different types with this name exist, but they are unrelated.
          Type 'CartItem' is not assignable to type 'CartItem'. Two different types with this name exist, but they are unrelated.
            Types of property 'price_units' are incompatible.
              Type 'PriceUnit[] | undefined' is not assignable to type '{ id: number; product_id: number; buying_price: string; selling_price: string; created_at: Date; updated_at: Date; unit_type: string; quantity: number; is_default: boolean; }[]'.
                Type 'undefined' is not assignable to type '{ id: number; product_id: number; buying_price: string; selling_price: string; created_at: Date; updated_at: Date; unit_type: string; quantity: number; is_default: boolean; }[]'.
 FILE  /home/runner/ProSaleManager/client/src/pages/PosPage.tsx:205:9

    203 |         onClose={() => setIsPaymentOpen(false)}
    204 |         cartItems={cartItems}
  > 205 |         onProcessPayment={handlePaymentComplete}
        |         ^^^^^^^^^^^^^^^^
    206 |       />
    207 |     </div>
    208 |   );

[TypeScript] Found 1 error. Watching for file changes.
Fetching products with pricing information...
Found 3 products
Fetching pricing for product 92
Fetching pricing for product 91
Fetching pricing for product 93
Found pricing: [
  {
    id: 118,
    unit_type: 'per_piece',
    quantity: 1,
    buying_price: '200.00',
    selling_price: '250.00',
    is_default: true
  },
  {
    id: 119,
    unit_type: 'three_piece',
    quantity: 3,
    buying_price: '540.00',
    selling_price: '675.00',
    is_default: false
  },
  {
    id: 120,
    unit_type: 'dozen',
    quantity: 12,
    buying_price: '2040.00',
    selling_price: '2550.00',
    is_default: false
  }
]
Found 3 price units for product 92
02:56:42 PM [express] GET /api/product-suppliers 304 in 173ms :: []
02:56:42 PM [express] GET /api/suppliers 304 in 173ms :: [{"id":1,"name":"Samuel Mbugua Nyambura","em…
02:56:42 PM [express] GET /api/purchase-orders 304 in 173ms :: []
Found pricing: [
  {
    id: 115,
    unit_type: 'per_piece',
    quantity: 1,
    buying_price: '120.00',
    selling_price: '150.00',
    is_default: true
  },
  {
    id: 116,
    unit_type: 'three_piece',
    quantity: 3,
    buying_price: '324.00',
    selling_price: '405.00',
    is_default: false
  },
  {
    id: 117,
    unit_type: 'dozen',
    quantity: 12,
    buying_price: '1224.00',
    selling_price: '1530.00',
    is_default: false
  }
]
Found 3 price units for product 91
Found pricing: [
  {
    id: 121,
    unit_type: 'per_piece',
    quantity: 1,
    buying_price: '150.00',
    selling_price: '180.00',
    is_default: true
  },
  {
    id: 122,
    unit_type: 'three_piece',
    quantity: 3,
    buying_price: '405.00',
    selling_price: '486.00',
    is_default: false
  },
  {
    id: 123,
    unit_type: 'dozen',
    quantity: 12,
    buying_price: '1530.00',
    selling_price: '1836.00',
    is_default: false
  }
]
Found 3 price units for product 93
02:56:42 PM [express] GET /api/products 304 in 684ms :: [{"id":92,"name":"Cooking Oil","stock":50,"ca…
