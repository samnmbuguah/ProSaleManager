
> rest-express@1.0.0 dev
> tsx watch --clear-screen=false --exclude vite.config.ts.* server/index.ts

Starting database initialization...
07:22:26 PM [express] serving on port 5000
Database migrations completed successfully
Database connection verified

 ERROR(TypeScript)  Module '"../../db/schema"' has no exported member 'UnitType'.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:6:3

    4 |   products, 
    5 |   unitPricing,
  > 6 |   UnitType,
      |   ^^^^^^^^
    7 |   UnitTypeValues,
    8 |   defaultUnitQuantities,
    9 |   productSchema,

 ERROR(TypeScript)  Module '"../../db/schema"' has no exported member 'productSchema'.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:9:3

     7 |   UnitTypeValues,
     8 |   defaultUnitQuantities,
  >  9 |   productSchema,
       |   ^^^^^^^^^^^^^
    10 |   type Product,
    11 |   type InsertProduct
    12 | } from '../../db/schema';

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 2, '(value: { name: string | SQL<unknown> | Placeholder<string, any>; sku: string | SQL<unknown> | Placeholder<string, any>; buying_price: string | SQL<unknown> | Placeholder<...>; ... 10 more ...; default_unit_pricing_id?: number | ... 3 more ... | undefined; }): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'is_active' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; sku: string | SQL<unknown> | Placeholder<string, any>; buying_price: string | SQL<unknown> | Placeholder<...>; ... 10 more ...; default_unit_pricing_id?: number | ... 3 more ... | undefined; }'.
  Overload 2 of 2, '(values: { name: string | SQL<unknown> | Placeholder<string, any>; sku: string | SQL<unknown> | Placeholder<string, any>; buying_price: string | SQL<unknown> | Placeholder<...>; ... 10 more ...; default_unit_pricing_id?: number | ... 3 more ... | undefined; }[]): PgInsertBase<...>', gave the following error.
    Object literal may only specify known properties, and 'name' does not exist in type '{ name: string | SQL<unknown> | Placeholder<string, any>; sku: string | SQL<unknown> | Placeholder<string, any>; buying_price: string | SQL<unknown> | Placeholder<...>; ... 10 more ...; default_unit_pricing_id?: number | ... 3 more ... | undefined; }[]'.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:107:34

    105 |     const result = await db.transaction(async (tx) => {
    106 |       // Create the product first
  > 107 |       const [newProduct] = await tx
        |                                  ^^
  > 108 |         .insert(products)
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 109 |         .values({
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 110 |           name: validatedData.name,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 111 |           sku: validatedData.sku || generateSKU(validatedData.name),
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 112 |           category: validatedData.category,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 113 |           stock: validatedData.stock,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 114 |           min_stock: validatedData.min_stock,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 115 |           max_stock: validatedData.max_stock,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 116 |           reorder_point: validatedData.reorder_point,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 117 |           stock_unit: validatedData.stock_unit,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 118 |           default_unit_pricing_id: null,
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 119 |           is_active: validatedData.is_active
        | ^^^^^^^^^^^^^^^^^^^^^^^^^
  > 120 |         })
        | ^^^^^^^^^^^
    121 |         .returning();
    122 |       
    123 |       // Create unit pricing entries

 ERROR(TypeScript)  Parameter 'unit' implicitly has an 'any' type.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:124:61

    122 |       
    123 |       // Create unit pricing entries
  > 124 |       const unitPricingData = validatedData.price_units.map(unit => ({
        |                                                             ^^^^
    125 |         product_id: newProduct.id,
    126 |         unit_type: unit.unit_type,
    127 |         quantity: defaultUnitQuantities[unit.unit_type as UnitTypeValues],

 ERROR(TypeScript)  Parameter 'unit' implicitly has an 'any' type.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:230:58

    228 |     const result = await db.transaction(async (tx) => {
    229 |       // Get the default pricing unit
  > 230 |       const defaultUnit = validatedData.price_units.find(unit => unit.is_default);
        |                                                          ^^^^
    231 |       if (!defaultUnit) {
    232 |         throw new Error("A default pricing unit is required");
    233 |       }

 ERROR(TypeScript)  Parameter 'unit' implicitly has an 'any' type.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:245:61

    243 |
    244 |       // Step 3: Insert new unit pricing
  > 245 |       const unitPricingData = validatedData.price_units.map(unit => ({
        |                                                             ^^^^
    246 |         product_id: productId,
    247 |         unit_type: unit.unit_type,
    248 |         quantity: defaultUnitQuantities[unit.unit_type],

 ERROR(TypeScript)  Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Record<"per_piece" | "three_piece" | "dozen", number>'.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:248:19

    246 |         product_id: productId,
    247 |         unit_type: unit.unit_type,
  > 248 |         quantity: defaultUnitQuantities[unit.unit_type],
        |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    249 |         buying_price: unit.buying_price,
    250 |         selling_price: unit.selling_price,
    251 |         is_default: unit.is_default,

 ERROR(TypeScript)  Object literal may only specify known properties, and 'is_active' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; sku?: string | SQL<unknown> | PgColumn<...> | undefined; ... 11 more ...; default_unit_pricing_id?: number | ... 3 more ... | undefined; }'.
 FILE  /home/runner/ProSaleManager/server/routes/products.ts:275:11

    273 |           stock_unit: validatedData.stock_unit,
    274 |           default_unit_pricing_id: defaultPricingUnit.id,
  > 275 |           is_active: validatedData.is_active // Added is_active
        |           ^^^^^^^^^
    276 |         })
    277 |         .where(eq(products.id, productId))
    278 |         .returning();

[TypeScript] Found 8 errors. Watching for file changes.
