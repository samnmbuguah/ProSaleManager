
> rest-express@1.0.0 dev
> tsx watch --clear-screen=false --exclude vite.config.ts.* server/index.ts

01:18:45 AM [express] serving on port 5000

 ERROR(TypeScript)  Object literal may only specify known properties, and 'price' does not exist in type 'AsyncDefaultValues<{ name: string; sku: string; buyingPrice: string; sellingPrice: string; category: string; id?: number | undefined; createdAt?: Date | null | undefined; updatedAt?: Date | null | undefined; ... 4 more ...; preferredSupplierId?: number | ... 1 more ... | undefined; }> | { ...; }'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductForm.tsx:42:7

    40 |       name: "",
    41 |       sku: "",
  > 42 |       price: "0",
       |       ^^^^^
    43 |       stock: 0,
    44 |       category: "Other",
    45 |     },

 ERROR(TypeScript)  Type '"price"' is not assignable to type '"id" | "name" | "createdAt" | "updatedAt" | "sku" | "buyingPrice" | "sellingPrice" | "stock" | "category" | "minStock" | "maxStock" | "reorderPoint" | "preferredSupplierId"'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductForm.tsx:81:11

    79 |         <FormField
    80 |           control={form.control}
  > 81 |           name="price"
       |           ^^^^
    82 |           render={({ field }) => (
    83 |             <FormItem>
    84 |               <FormLabel>Price</FormLabel>

 ERROR(TypeScript)  Type '{ onChange: (e: ChangeEvent<HTMLInputElement>) => void; onBlur: Noop; value: string | number | Date | null | undefined; disabled?: boolean | undefined; name: "id" | ... 11 more ... | "preferredSupplierId"; ref: RefCallBack; type: "number"; step: string; }' is not assignable to type 'InputProps'.
  Types of property 'value' are incompatible.
    Type 'string | number | Date | null | undefined' is not assignable to type 'string | number | readonly string[] | undefined'.
      Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductForm.tsx:86:18

    84 |               <FormLabel>Price</FormLabel>
    85 |               <FormControl>
  > 86 |                 <Input
       |                  ^^^^^
    87 |                   type="number"
    88 |                   step="0.01"
    89 |                   {...field}

 ERROR(TypeScript)  The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:59:23

    57 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
    58 |                 <TableCell>
  > 59 |                   {(((product.sellingPrice - product.buyingPrice) / product.buyingPrice) * 100).toFixed(1)}%
       |                       ^^^^^^^^^^^^^^^^^^^^
    60 |                 </TableCell>
    61 |                 <TableCell>{product.stock}</TableCell>
    62 |                 <TableCell>

 ERROR(TypeScript)  The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:59:46

    57 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
    58 |                 <TableCell>
  > 59 |                   {(((product.sellingPrice - product.buyingPrice) / product.buyingPrice) * 100).toFixed(1)}%
       |                                              ^^^^^^^^^^^^^^^^^^^
    60 |                 </TableCell>
    61 |                 <TableCell>{product.stock}</TableCell>
    62 |                 <TableCell>

 ERROR(TypeScript)  The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:59:69

    57 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
    58 |                 <TableCell>
  > 59 |                   {(((product.sellingPrice - product.buyingPrice) / product.buyingPrice) * 100).toFixed(1)}%
       |                                                                     ^^^^^^^^^^^^^^^^^^^
    60 |                 </TableCell>
    61 |                 <TableCell>{product.stock}</TableCell>
    62 |                 <TableCell>

 ERROR(TypeScript)  Type 'number' is not assignable to type 'string'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/SupplierPricing.tsx:71:7

    69 |     await linkProductToSupplier({
    70 |       ...data,
  > 71 |       costPrice: parseFloat(data.costPrice as string),
       |       ^^^^^^^^^
    72 |     });
    73 |     setIsLinkFormOpen(false);
    74 |     linkForm.reset();

 ERROR(TypeScript)  Property 'supplier' does not exist on type '{ id: number; createdAt: Date | null; updatedAt: Date | null; productId: number; supplierId: number; costPrice: string; isPreferred: boolean; lastSupplyDate: Date | null; }'. Did you mean 'supplierId'?
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/SupplierPricing.tsx:108:30

    106 |           {productSuppliersList.map((ps) => (
    107 |             <TableRow key={ps.id}>
  > 108 |               <TableCell>{ps.supplier.name}</TableCell>
        |                              ^^^^^^^^
    109 |               <TableCell>KSh {Number(ps.costPrice).toFixed(2)}</TableCell>
    110 |               <TableCell>{ps.isPreferred ? "Yes" : "No"}</TableCell>
    111 |               <TableCell>

 ERROR(TypeScript)  Property 'price' does not exist on type '{ id: number; name: string; createdAt: Date | null; updatedAt: Date | null; sku: string; buyingPrice: string; sellingPrice: string; stock: number; category: string; minStock: number; maxStock: number; reorderPoint: number; preferredSupplierId: number | null; }'.
 FILE  /home/runner/ProSaleManager/client/src/components/pos/ProductSearch.tsx:38:73

    36 |           >
    37 |             <div className="font-bold">{product.name}</div>
  > 38 |             <div className="text-sm text-muted-foreground">KSh {product.price}</div>
       |                                                                         ^^^^^
    39 |           </Button>
    40 |         ))}
    41 |       </div>

 ERROR(TypeScript)  No overload matches this call.
  Overload 1 of 2, '(props: Props): Area', gave the following error.
    Type '{ type: "monotone"; dataKey: string; name: string; formatter: (value: number) => string; stroke: string; fillOpacity: number; fill: string; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<Area> & Pick<Readonly<Props>, "string" | "id" | "name" | ... 485 more ... | "baseLine"> & InexactPartial<...> & InexactPartial<...>'.
      Property 'formatter' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Area> & Pick<Readonly<Props>, "string" | "id" | "name" | ... 485 more ... | "baseLine"> & InexactPartial<...> & InexactPartial<...>'. Did you mean 'format'?
  Overload 2 of 2, '(props: Props, context: any): Area', gave the following error.
    Type '{ type: "monotone"; dataKey: string; name: string; formatter: (value: number) => string; stroke: string; fillOpacity: number; fill: string; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<Area> & Pick<Readonly<Props>, "string" | "id" | "name" | ... 485 more ... | "baseLine"> & InexactPartial<...> & InexactPartial<...>'.
      Property 'formatter' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<Area> & Pick<Readonly<Props>, "string" | "id" | "name" | ... 485 more ... | "baseLine"> & InexactPartial<...> & InexactPartial<...>'. Did you mean 'format'?
 FILE  /home/runner/ProSaleManager/client/src/components/reports/SalesChart.tsx:96:15

    94 |               dataKey="amount"
    95 |               name="Amount"
  > 96 |               formatter={(value: number) => formatCurrency(value)}
       |               ^^^^^^^^^
    97 |               stroke="hsl(215 25% 27%)"
    98 |               fillOpacity={1}
    99 |               fill="url(#colorSales)"

 ERROR(TypeScript)  Property 'buying_price' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'buyingPrice'?
 FILE  /home/runner/ProSaleManager/server/routes.ts:77:33

    75 |           name: products.name,
    76 |           sku: products.sku,
  > 77 |           buyingPrice: products.buying_price,
       |                                 ^^^^^^^^^^^^
    78 |           sellingPrice: products.selling_price,
    79 |           stock: products.stock,
    80 |           category: products.category,

 ERROR(TypeScript)  Property 'selling_price' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 11 more ...; updatedAt: PgColumn<...>; }...'. Did you mean 'sellingPrice'?
 FILE  /home/runner/ProSaleManager/server/routes.ts:78:34

    76 |           sku: products.sku,
    77 |           buyingPrice: products.buying_price,
  > 78 |           sellingPrice: products.selling_price,
       |                                  ^^^^^^^^^^^^^
    79 |           stock: products.stock,
    80 |           category: products.category,
    81 |           createdAt: products.createdAt,

[TypeScript] Found 12 errors. Watching for file changes.
01:18:52 AM [express] GET /api/user 401 in 2ms
01:19:07 AM [express] POST /api/login 200 in 883ms :: {"message":"Login successful","user":{"id":2,"u…
01:19:07 AM [express] GET /api/user 304 in 68ms :: {"id":2,"username":"Newuser@gmail.com","password":…
Fetch products error: TypeError: Cannot convert undefined or null to object
    at Function.entries (<anonymous>)
    at orderSelectedFields (/home/runner/ProSaleManager/node_modules/src/utils.ts:77:16)
    at <anonymous> (/home/runner/ProSaleManager/node_modules/src/utils.ts:88:19)
    at Array.reduce (<anonymous>)
    at orderSelectedFields (/home/runner/ProSaleManager/node_modules/src/utils.ts:77:32)
    at <anonymous> (/home/runner/ProSaleManager/node_modules/src/pg-core/query-builders/select.ts:976:23)
    at Object.startActiveSpan (/home/runner/ProSaleManager/node_modules/src/tracing.ts:27:11)
    at PgSelectBase._prepare (/home/runner/ProSaleManager/node_modules/src/pg-core/query-builders/select.ts:975:17)
    at <anonymous> (/home/runner/ProSaleManager/node_modules/src/pg-core/query-builders/select.ts:1006:16)
    at Object.startActiveSpan (/home/runner/ProSaleManager/node_modules/src/tracing.ts:27:11)
    at PgSelectBase.execute (/home/runner/ProSaleManager/node_modules/src/pg-core/query-builders/select.ts:1005:17)
    at PgSelectBase.then (/home/runner/ProSaleManager/node_modules/src/query-promise.ts:31:15)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
01:19:08 AM [express] GET /api/products 500 in 83ms :: {"error":"Failed to fetch products"}
01:19:08 AM [express] GET /api/customers 304 in 386ms :: [{"id":7,"name":"John Doe","email":"john@exa…