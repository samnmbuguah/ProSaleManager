
> rest-express@1.0.0 dev
> tsx watch --clear-screen=false --exclude vite.config.ts.* server/index.ts

[Backup] Starting scheduled backup...
Backup schedule initialized
06:45:37 AM [express] serving on port 5000
Database migrations completed successfully
[Deployment] Status: in_progress, Version: ProSaleManager
[Deployment] Timestamp: Tue Dec 10 2024 06:45:37 GMT+0000 (Coordinated Universal Time)
[CI/CD] Executing stage: Pre-deployment Database Backup

 ERROR(TypeScript)  Property 'buyingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:54:48

    52 |                 <TableCell className="font-medium">{product.name}</TableCell>
    53 |                 <TableCell>{product.category}</TableCell>
  > 54 |                 <TableCell>KSh {Number(product.buyingPrice).toFixed(2)}</TableCell>
       |                                                ^^^^^^^^^^^
    55 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
    56 |                 <TableCell>
    57 |                   {(((Number(product.sellingPrice) - Number(product.buyingPrice)) / Number(product.buyingPrice)) * 100).toFixed(1)}%

 ERROR(TypeScript)  Property 'sellingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:55:48

    53 |                 <TableCell>{product.category}</TableCell>
    54 |                 <TableCell>KSh {Number(product.buyingPrice).toFixed(2)}</TableCell>
  > 55 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
       |                                                ^^^^^^^^^^^^
    56 |                 <TableCell>
    57 |                   {(((Number(product.sellingPrice) - Number(product.buyingPrice)) / Number(product.buyingPrice)) * 100).toFixed(1)}%
    58 |                 </TableCell>

 ERROR(TypeScript)  Property 'sellingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:57:38

    55 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
    56 |                 <TableCell>
  > 57 |                   {(((Number(product.sellingPrice) - Number(product.buyingPrice)) / Number(product.buyingPrice)) * 100).toFixed(1)}%
       |                                      ^^^^^^^^^^^^
    58 |                 </TableCell>
    59 |                 <TableCell>{product.stock}</TableCell>
    60 |                 <TableCell>

 ERROR(TypeScript)  Property 'buyingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:57:69

    55 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
    56 |                 <TableCell>
  > 57 |                   {(((Number(product.sellingPrice) - Number(product.buyingPrice)) / Number(product.buyingPrice)) * 100).toFixed(1)}%
       |                                                                     ^^^^^^^^^^^
    58 |                 </TableCell>
    59 |                 <TableCell>{product.stock}</TableCell>
    60 |                 <TableCell>

 ERROR(TypeScript)  Property 'buyingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/ProductTable.tsx:57:100

    55 |                 <TableCell>KSh {Number(product.sellingPrice).toFixed(2)}</TableCell>
    56 |                 <TableCell>
  > 57 |                   {(((Number(product.sellingPrice) - Number(product.buyingPrice)) / Number(product.buyingPrice)) * 100).toFixed(1)}%
       |                                                                                                    ^^^^^^^^^^^
    58 |                 </TableCell>
    59 |                 <TableCell>{product.stock}</TableCell>
    60 |                 <TableCell>

 ERROR(TypeScript)  Property 'buyingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/PurchaseOrderForm.tsx:72:89

    70 |       productId: parseInt(productId),
    71 |       quantity: 1,
  > 72 |       buyingPrice: supplierPricing ? Number(supplierPricing.costPrice) : Number(product.buyingPrice),
       |                                                                                         ^^^^^^^^^^^
    73 |       sellingPrice: Number(product.sellingPrice),
    74 |       name: product.name,
    75 |     }]);

 ERROR(TypeScript)  Property 'sellingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/inventory/PurchaseOrderForm.tsx:73:36

    71 |       quantity: 1,
    72 |       buyingPrice: supplierPricing ? Number(supplierPricing.costPrice) : Number(product.buyingPrice),
  > 73 |       sellingPrice: Number(product.sellingPrice),
       |                                    ^^^^^^^^^^^^
    74 |       name: product.name,
    75 |     }]);
    76 |   };

 ERROR(TypeScript)  Property 'selectedUnitPrice' does not exist on type 'CartItem'.
 FILE  /home/runner/ProSaleManager/client/src/components/pos/Cart.tsx:34:34

    32 |               <div className="font-medium">{item.name}</div>
    33 |               <div className="text-sm text-muted-foreground">
  > 34 |                 KSh {Number(item.selectedUnitPrice.sellingPrice).toFixed(2)} per {item.selectedUnitPrice.quantity} {item.selectedUnitPrice.unitType}
       |                                  ^^^^^^^^^^^^^^^^^
    35 |               </div>
    36 |             </div>
    37 |             

 ERROR(TypeScript)  Property 'selectedUnitPrice' does not exist on type 'CartItem'.
 FILE  /home/runner/ProSaleManager/client/src/components/pos/Cart.tsx:34:88

    32 |               <div className="font-medium">{item.name}</div>
    33 |               <div className="text-sm text-muted-foreground">
  > 34 |                 KSh {Number(item.selectedUnitPrice.sellingPrice).toFixed(2)} per {item.selectedUnitPrice.quantity} {item.selectedUnitPrice.unitType}
       |                                                                                        ^^^^^^^^^^^^^^^^^
    35 |               </div>
    36 |             </div>
    37 |             

 ERROR(TypeScript)  Property 'selectedUnitPrice' does not exist on type 'CartItem'.
 FILE  /home/runner/ProSaleManager/client/src/components/pos/Cart.tsx:34:122

    32 |               <div className="font-medium">{item.name}</div>
    33 |               <div className="text-sm text-muted-foreground">
  > 34 |                 KSh {Number(item.selectedUnitPrice.sellingPrice).toFixed(2)} per {item.selectedUnitPrice.quantity} {item.selectedUnitPrice.unitType}
       |                                                                                                                          ^^^^^^^^^^^^^^^^^
    35 |               </div>
    36 |             </div>
    37 |             

 ERROR(TypeScript)  Property 'sellingPrice' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/components/pos/ProductSearch.tsx:38:80

    36 |           >
    37 |             <div className="font-bold">{product.name}</div>
  > 38 |             <div className="text-sm text-muted-foreground">KSh {Number(product.sellingPrice).toFixed(2)}</div>
       |                                                                                ^^^^^^^^^^^^
    39 |           </Button>
    40 |         ))}
    41 |       </div>

 ERROR(TypeScript)  Property 'sku' does not exist on type 'Product'.
 FILE  /home/runner/ProSaleManager/client/src/hooks/use-pos.ts:135:9

    133 |     return products.filter(p => 
    134 |       p.name.toLowerCase().includes(query.toLowerCase()) ||
  > 135 |       p.sku.toLowerCase().includes(query.toLowerCase())
        |         ^^^
    136 |     );
    137 |   };
    138 |

 ERROR(TypeScript)  Property 'selectedUnitPrice' does not exist on type 'CartItem'.
 FILE  /home/runner/ProSaleManager/client/src/hooks/use-pos.ts:141:37

    139 |   const calculateTotal = (items: CartItem[]) => {
    140 |     return items.reduce((sum, item) => {
  > 141 |       const unitPrice = Number(item.selectedUnitPrice.sellingPrice);
        |                                     ^^^^^^^^^^^^^^^^^
    142 |       const unitsPerPrice = item.selectedUnitPrice.quantity;
    143 |       // Calculate how many complete units we're buying
    144 |       const completeUnits = Math.floor(item.quantity / unitsPerPrice);

 ERROR(TypeScript)  Property 'selectedUnitPrice' does not exist on type 'CartItem'.
 FILE  /home/runner/ProSaleManager/client/src/hooks/use-pos.ts:142:34

    140 |     return items.reduce((sum, item) => {
    141 |       const unitPrice = Number(item.selectedUnitPrice.sellingPrice);
  > 142 |       const unitsPerPrice = item.selectedUnitPrice.quantity;
        |                                  ^^^^^^^^^^^^^^^^^
    143 |       // Calculate how many complete units we're buying
    144 |       const completeUnits = Math.floor(item.quantity / unitsPerPrice);
    145 |       // Calculate remaining items that don't make a complete unit

 ERROR(TypeScript)  Property 'sellingPrice' does not exist on type 'CartItem'.
 FILE  /home/runner/ProSaleManager/client/src/pages/PosPage.tsx:68:28

    66 |         productId: item.id,
    67 |         quantity: item.quantity,
  > 68 |         price: Number(item.sellingPrice),
       |                            ^^^^^^^^^^^^
    69 |       })),
    70 |       customerId,
    71 |       total: calculateTotal(cartItems),

 ERROR(TypeScript)  Property 'sku' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; };...'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:107:27

    105 |             id: products.id,
    106 |             name: products.name,
  > 107 |             sku: products.sku,
        |                           ^^^
    108 |             buyingPrice: products.buyingPrice,
    109 |             sellingPrice: products.sellingPrice,
    110 |           },

 ERROR(TypeScript)  Property 'buyingPrice' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; };...'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:108:35

    106 |             name: products.name,
    107 |             sku: products.sku,
  > 108 |             buyingPrice: products.buyingPrice,
        |                                   ^^^^^^^^^^^
    109 |             sellingPrice: products.sellingPrice,
    110 |           },
    111 |         })

 ERROR(TypeScript)  Property 'sellingPrice' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; };...'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:109:36

    107 |             sku: products.sku,
    108 |             buyingPrice: products.buyingPrice,
  > 109 |             sellingPrice: products.sellingPrice,
        |                                    ^^^^^^^^^^^^
    110 |           },
    111 |         })
    112 |         .from(productSuppliersTable)

 ERROR(TypeScript)  Property 'sku' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; };...'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:151:25

    149 |           id: products.id,
    150 |           name: products.name,
  > 151 |           sku: products.sku,
        |                         ^^^
    152 |           buyingPrice: products.buyingPrice,
    153 |           sellingPrice: products.sellingPrice,
    154 |           stock: products.stock,

 ERROR(TypeScript)  Property 'buyingPrice' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; };...'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:152:33

    150 |           name: products.name,
    151 |           sku: products.sku,
  > 152 |           buyingPrice: products.buyingPrice,
        |                                 ^^^^^^^^^^^
    153 |           sellingPrice: products.sellingPrice,
    154 |           stock: products.stock,
    155 |           category: products.category,

 ERROR(TypeScript)  Property 'sellingPrice' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; };...'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:153:34

    151 |           sku: products.sku,
    152 |           buyingPrice: products.buyingPrice,
  > 153 |           sellingPrice: products.sellingPrice,
        |                                  ^^^^^^^^^^^^
    154 |           stock: products.stock,
    155 |           category: products.category,
    156 |           minStock: products.minStock,

 ERROR(TypeScript)  Object literal may only specify known properties, and 'buyingPrice' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; createdAt?: SQL<unknown> | Date | PgColumn<...> | undefined; ... 6 more ...; stockUnit?: string | ... 2 more ... | undefined; }'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:359:11

    357 |       await db.update(products)
    358 |         .set({
  > 359 |           buyingPrice: buyingPrice.toString(),
        |           ^^^^^^^^^^^
    360 |           sellingPrice: sellingPrice.toString(),
    361 |           updatedAt: new Date()
    362 |         })

 ERROR(TypeScript)  Object literal may only specify known properties, and 'buyingPrice' does not exist in type '{ name?: string | SQL<unknown> | PgColumn<ColumnBaseConfig<ColumnDataType, string>, {}, {}> | undefined; createdAt?: SQL<unknown> | Date | PgColumn<...> | undefined; ... 6 more ...; stockUnit?: string | ... 2 more ... | undefined; }'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:406:15

    404 |             .set({ 
    405 |               stock: sql`${products.stock} + ${item.quantity}`,
  > 406 |               buyingPrice: item.buyingPrice,
        |               ^^^^^^^^^^^
    407 |               sellingPrice: item.sellingPrice,
    408 |               updatedAt: new Date()
    409 |             })

 ERROR(TypeScript)  Property 'sku' does not exist on type 'PgTableWithColumns<{ name: "products"; schema: undefined; columns: { id: PgColumn<{ name: "id"; tableName: "products"; dataType: "number"; columnType: "PgInteger"; data: number; driverParam: string | number; notNull: true; ... 7 more ...; generated: undefined; }, {}, {}>; ... 8 more ...; updatedAt: PgColumn<...>; };...'.
 FILE  /home/runner/ProSaleManager/server/routes.ts:436:27

    434 |             id: products.id,
    435 |             name: products.name,
  > 436 |             sku: products.sku,
        |                           ^^^
    437 |           }
    438 |         })
    439 |         .from(purchaseOrderItems)

 ERROR(TypeScript)  Property 'sku' does not exist on type '{ id: number; name: string; stockUnit: string; }'.
 FILE  /home/runner/ProSaleManager/server/routes/sales.ts:142:25

    140 |           ...item,
    141 |           name: product?.name || 'Unknown Product',
  > 142 |           sku: product?.sku || 'N/A',
        |                         ^^^
    143 |         };
    144 |       })
    145 |     );

[TypeScript] Found 25 errors. Watching for file changes.
[Backup] Successfully created backup: backup-2024-12-10T06-45-37-123Z.sql
[Backup] Scheduled backup completed successfully: backup-2024-12-10T06-45-37-123Z.sql
[Backup] Successfully created backup: backup-2024-12-10T06-45-37-670Z.sql
[CI/CD] Stage completed: Pre-deployment Database Backup
[CI/CD] Executing stage: Database Migration Check
[CI/CD] Stage completed: Database Migration Check
[CI/CD] Executing stage: Environment Validation
[CI/CD] Stage completed: Environment Validation
[CI/CD] Executing stage: Static Asset Validation
[CI/CD] Stage completed: Static Asset Validation
[CI/CD] Executing stage: Database Connection
[CI/CD] Stage completed: Database Connection
[CI/CD] Executing stage: Progressive Rollout Check
[CI/CD] Stage completed: Progressive Rollout Check
[Deployment] Status: success, Version: ProSaleManager
[Deployment] Timestamp: Tue Dec 10 2024 06:45:50 GMT+0000 (Coordinated Universal Time)
[Deployment] Metrics:
        Duration: 12751ms
        Successful Stages: 6
        Failed Stages: 0
      
[Deployment] Successfully completed deployment process
06:45:50 AM [express] Server deployment completed successfully